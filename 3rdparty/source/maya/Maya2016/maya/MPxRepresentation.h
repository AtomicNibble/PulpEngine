#ifndef _MPxRepresentation
#define _MPxRepresentation
//-
// ==========================================================================
// Copyright (C) 2012 Autodesk, Inc., and/or its licensors.  All
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its
// licensors,  which is protected by U.S. and Canadian federal copyright law
// and by international treaties.
//
// The Data may not be disclosed or distributed to third parties or be
// copied or duplicated, in whole or in part, without the prior written
// consent of Autodesk.
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following
// disclaimer, must be included in all copies of the Software, in whole
// or in part, and all derivative works of the Software, unless such copies
// or derivative works are solely in the form of machine-executable object
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
// ==========================================================================

#if defined __cplusplus

// ****************************************************************************
// INCLUDED HEADER FILES

#include <maya/MString.h>

class MPxAssembly;
class MExternalContentInfoTable;
class MExternalContentLocationTable;

// ****************************************************************************
// CLASS DECLARATION (MPxRepresentation)

//! \ingroup OpenMaya MPx
//! \brief Abstract base class for user defined representations. 
/*!
  MPxRepresentation is an abstract base class that can be used to provide
  an interface and services for user defined representations.

  Representations are owned by a scene assembly node (see
  MPxAssembly).  A scene assembly node will activate one of 
  its representations; representations must therefore support
  activate and inactivate operations.

  This class can be used to implement new kinds of representations
  within Maya that behave in a similar manner to the representations
  included in the scene assembly reference Maya plugin, which uses
  MPxRepresentation as a base class for its representations.

  Note that use of this class to implement representations is not
  mandatory: it provides an interface that is convenient for dealing
  consistently with representations, as well as an inactivate()
  implementation that is widely useful (clear out the assembly).  Also
  note that MPxRepresentation is not associated with a corresponding
  Maya DAG or DG node.

  For use of scene assembly nodes, see function set MFnAssembly.
*/
class OPENMAYA_EXPORT MPxRepresentation
{
public: 

   /*----- member functions -----*/

   virtual ~MPxRepresentation();

   virtual bool activate() = 0;
   virtual bool inactivate();

   virtual MString getType() const = 0;

   MString getName() const;

   virtual bool canApplyEdits() const;

   virtual void getExternalContent( MExternalContentInfoTable& table ) const;
   virtual void setExternalContent(
      const MExternalContentLocationTable& table
   );

   // SCRIPT USE ONLY
   MPxAssembly* _getAssembly() const { return getAssembly(); }
   //

protected: 

   /*----- member functions -----*/

   MPxRepresentation(MPxAssembly* assembly, const MString& name);

	//!	USE _getAssembly() IN SCRIPT
   MPxAssembly* getAssembly() const;

private:

   /*----- member functions -----*/

   // Assignment operator prohibited, left undefined.
   MPxRepresentation& operator=(const MPxRepresentation&);

   /*----- data members -----*/

   MPxAssembly* const fAssembly;
   const MString    fName;
};

#endif /* __cplusplus */
#endif /* _MPxRepresentation */

