#ifndef _MAttributePatternArray
#define _MAttributePatternArray
//-
// ==========================================================================
// Copyright (C) 2011 Autodesk, Inc., and/or its licensors.  All
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its
// licensors,  which is protected by U.S. and Canadian federal copyright law
// and by international treaties.
//
// The Data may not be disclosed or distributed to third parties or be
// copied or duplicated, in whole or in part, without the prior written
// consent of Autodesk.
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following
// disclaimer, must be included in all copies of the Software, in whole
// or in part, and all derivative works of the Software, unless such copies
// or derivative works are solely in the form of machine-executable object
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
// ==========================================================================
//+
//
// CLASS:    MAttributePatternArray
//
// ****************************************************************************
//
// CLASS DESCRIPTION (MAttributePatternArray)
//
//	Methods are provided for obtaining the attribute pattern elements by
//	index, clearing the array, determining the length of the array, and
//	removing, inserting and appending array elements.
//
// ****************************************************************************

#if defined __cplusplus

// ****************************************************************************
// INCLUDED HEADER FILES


#include <maya/MTypes.h>
#include <maya/MStatus.h>

// ****************************************************************************
// DECLARATIONS

class MAttributePattern;

// ****************************************************************************
// CLASS DECLARATION (MAttributePatternArray)

//! \ingroup OpenMaya
//! \brief Indexable Array of attribute patterns. 
/*!
Provides methods for manipulating arrays of attribute patterns.

Arrays of attribute patterns are used when constructing pattern lists from a
string or file description. Since there's no way of knowing in advance how many
will be created from a given description this general purpose array was needed.

The length of the array adjusts automatically.
*/
class OPENMAYA_EXPORT MAttributePatternArray
{

public:
	MAttributePatternArray();
	MAttributePatternArray( const MAttributePatternArray& other );
	MAttributePatternArray( unsigned int			 initializeSize,
							const MAttributePattern& initialValue );
	~MAttributePatternArray();
	const MAttributePattern& operator[]	(unsigned int index) const;
	MAttributePatternArray&	operator=	(const MAttributePatternArray& rhs);
	MStatus			set					( const MAttributePattern& element, unsigned int index);
	MStatus			setLength			( unsigned int length );
	unsigned int	length				() const;
	MStatus			remove				( unsigned int index );
	MStatus			insert				( const MAttributePattern & element, unsigned int index );
	MStatus			append				( const MAttributePattern & element );
 	MStatus         copy				( const MAttributePatternArray& source );
	MStatus			clear				();
	void			setSizeIncrement	( unsigned int newIncrement );
	unsigned int	sizeIncrement		() const;
BEGIN_NO_SCRIPT_SUPPORT:

	MAttributePattern &		operator[]( unsigned int index );

	//!	NO SCRIPT SUPPORT
	friend OPENMAYA_EXPORT std::ostream &operator<<(std::ostream &os,
											   const MAttributePatternArray &array);

END_NO_SCRIPT_SUPPORT:

	static const char* className();

protected:
// No protected members

private:
	MAttributePatternArray ( void * );
	void * arr;
	bool   own;
};

#endif /* __cplusplus */
#endif /* _MAttributePatternArray */
