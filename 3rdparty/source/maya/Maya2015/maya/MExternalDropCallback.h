#ifndef _MExternalDropCallback
#define _MExternalDropCallback
//-
// ==========================================================================
// Copyright (C) 2010 Autodesk, Inc., and/or its licensors.  All
// rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its
// licensors,  which is protected by U.S. and Canadian federal copyright law
// and by international treaties.
//
// The Data may not be disclosed or distributed to third parties or be
// copied or duplicated, in whole or in part, without the prior written
// consent of Autodesk.
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following
// disclaimer, must be included in all copies of the Software, in whole
// or in part, and all derivative works of the Software, unless such copies
// or derivative works are solely in the form of machine-executable object
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO
// EVENT WILL AUTODESK AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS LICENSORS HAS
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
// ==========================================================================
//+
//
// CLASS:    MExternalDropCallback
//
// ****************************************************************************
//
#if defined __cplusplus

// ****************************************************************************


#include <maya/MStatus.h>
#include <maya/MTypes.h>

class MExternalDropData;

// ****************************************************************************

//! \ingroup OpenMayaUI
//! \brief Provides a callback hook into Maya's drag-and-drop mechanism.
/*!
This class is used to register callbacks to gain access to Maya's drag-and-drop information during dropping an external object to Maya. You can replace or augment Maya's drop behavior for external drag-and-drop operations. 

To register callbacks, inherit from this class and override externalDropCallback(). The method can be overridden by the callback. Then register the callbacks by calling the addCallback() method.

Each of the callback methods gets passed the name of the drop site control and an MExternalDropData instance which contains additional information provided by the system (for example, text or URL information associated with the drop).

If multiple callbacks need to be registered, the order of invocation can be set by adding each callback with a priority number, 0 being the highest priority.
Callbacks are then invoked in priority order. Note that the first callback that does not return kMayaDefault will cause the invocations to stop; lower priority callbacks will then not be invoked.
*/
class OPENMAYAUI_EXPORT MExternalDropCallback
{
public:
	//! Possible return values from externalDropCallback(), used to inform Maya of what further action to take, if any.
	enum MExternalDropStatus
	{
		//! Run Maya default action
		kMayaDefault = 0,
		//! Skip Maya default action and accept the drop
		kNoMayaDefaultAndAccept,
		//! Skip Maya default action and do not accept the drop
		kNoMayaDefaultAndNoAccept,
	};

					MExternalDropCallback();
	virtual			~MExternalDropCallback();

    virtual MExternalDropStatus	externalDropCallback( bool doDrop, const MString& controlName, const MExternalDropData& data ) = 0;

    static MStatus	addCallback( MExternalDropCallback*, int priority = 0 );
    static MStatus	removeCallback( MExternalDropCallback* );

protected:

private:
    void*	fInternalData;

	// prevent copying
	MExternalDropCallback( const MExternalDropCallback& );
};

#endif /* __cplusplus */
#endif /* _MExternalDropCallback */
