

void GenerateUI( asset& Asset )
{
    string cats = Asset.getMaterialCats(); // "Geo | Decal | Effect | UI | Tool";
    string surTypes = "<none> | Brick | Concrete | Cloth | Flesh | Glass | Gravel | Ice | Metal | Mud | Plastic | Paper | Rock | Snow | Sand | Wood | Water";
    // for grouping in editor
    string usage = "<none> | Door | Floor | Celing | Roof | Window | Sky";

    Asset.AddCombo( "cat", cats ).SetTitle( "Category:" );
    Asset.AddCombo( "surface_type", surTypes ).SetTitle( "Surface Type:" );
    Asset.AddCombo( "usage", usage ).SetTitle( "Edtior Group:" );

    string tilingSizes =
    """
        <auto>|
        16|
        32|
        64|
        128|
        256|
        512|
        1024|
        2048|
        4096
    """;

    string climbType =
    """
        <none> |
        ladder |
        mantleOn |
        mantleOver |
        climbWall |
        climbPipe |
    """;

    Asset.AddCombo( "tilingWidth", tilingSizes ).SetTitle( "Tiling Width" ).SetToolTip( "Sets the tiling width of this material. <auto> would use the largest width from the material images." );
    Asset.AddCombo( "tilingHeight", tilingSizes ).SetTitle( "Tiling Height" ).SetToolTip( "Sets the tiling height of this material. <auto> would use the largest height from the material images." );

    Asset.AddCombo( "climbType", climbType ).SetTitle( "Climb Type" );

    string nearestFilters = "nearest (mip none) | nearest (mip nearest) | nearest (mip linear)";
    string linearFilters = "linear (mip none) | linear (mip nearest) | linear (mip linear)";
    string anisotropicFilters = "anisotropicx2 | anisotropicx4| anisotropicx8 | anisotropicx16";
    string filters = nearestFilters + " | " + linearFilters + " | " + anisotropicFilters;

    string tileTypes  = "tile both | tile horizontal | tile vertical | no tile";

    string TileTip = "Wraps the image so it repeats at the edges, or clamps it so it stops at the edges";
    string FilterTip = "Makes the image clearer when viewed from an angle, at some cost of rendering time";

    Asset.BeginGroup("ColorMap");
    {
        Asset.AddAssetRef( "mapColor", "img" ).SetTitle("Color Map");

        Asset.AddCombo( "tileColor", tileTypes ).SetTitle( "Tile Mode" ).SetToolTip( TileTip );
        Asset.AddCombo( "filterColor", filters ).SetTitle( "Filter Mode" ).SetToolTip( FilterTip ).SetDefaultValue( "aniso2x (mip linear)" );
    }

    Asset.BeginGroup("NormalMap");
    {
        Asset.AddAssetRef( "mapNormal", "img" ).SetTitle("Color Map");

        Asset.AddCombo( "tileNormal", tileTypes ).SetTitle( "Tile Mode" ).SetToolTip( TileTip );
        Asset.AddCombo( "filterNormal", filters ).SetTitle( "Filter Mode" ).SetToolTip( FilterTip ).SetDefaultValue( "aniso2x (mip linear)" );
    }

    Asset.BeginGroup("DetailNormalMap");
    {
        Asset.AddAssetRef( "mapDetailNormal", "img").SetTitle("Color Map");

        Asset.AddCombo( "tileDetailNormal", tileTypes ).SetTitle( "Tile Mode" ).SetToolTip( TileTip );
        Asset.AddCombo( "filterDetailNormal", filters ).SetTitle( "Filter Mode" ).SetToolTip( FilterTip ).SetDefaultValue( "aniso2x (mip linear)" );
    }

    Asset.BeginGroup("SpecColMap");
    {
        Asset.AddAssetRef( "mapSpecCol", "img" ).SetTitle("Color Map");

        Asset.AddCombo( "tileSpecCol", tileTypes ).SetTitle( "Tile Mode" ).SetToolTip( TileTip );
        Asset.AddCombo( "filterSpecCol", filters ).SetTitle( "Filter Mode" ).SetToolTip( FilterTip ).SetDefaultValue( "linear (mip nearest)" );
    }

    Asset.BeginGroup("Properties");
    {
        Asset.AddCheckBox( "f_nodraw", false ).SetTitle( "NoDraw" );
        Asset.AddCheckBox( "f_editorvisible", false ).SetTitle( "Editor Visible" ).SetToolTip("makes nodraw visable in editor modes.");
        Asset.AddCheckBox( "f_solid", true ).SetTitle( "solid" );
        Asset.AddCheckBox( "f_structual", false ).SetTitle( "Structual" );
        Asset.AddCheckBox( "f_detail", false ).SetTitle( "Detail" );
        Asset.AddCheckBox( "f_portal", false ).SetTitle( "Portal" );
        Asset.AddCheckBox( "f_mount", false ).SetTitle( "Mount" );
        Asset.AddCheckBox( "f_player_clip", false ).SetTitle( "Player Clip" ).SetToolTip("Blocks players");
        Asset.AddCheckBox( "f_ai_clip", false ).SetTitle( "AI Clip" ).SetToolTip("Blocks AI (not inc players)");
        Asset.AddCheckBox( "f_bullet_clip", false ).SetTitle( "Bullet Clip" ).SetToolTip("Blocks Bullets");
        Asset.AddCheckBox( "f_vehicle_clip", false ).SetTitle( "Vehicle Clip" ).SetToolTip("Blocks Vehicles");
        Asset.AddCheckBox( "f_no_fall_dmg", false ).SetTitle( "No Fall Dmg" ).SetToolTip("No fall dmg no matter the height!");
        Asset.AddCheckBox( "f_no_impact", false ).SetTitle( "No Impact" ).SetToolTip("No impact marks");
        Asset.AddCheckBox( "f_no_pennetrate", false ).SetTitle( "No Pennetrate" ).SetToolTip("projectiles and bullets can't penatrate");
        Asset.AddCheckBox( "f_no_steps", false ).SetTitle( "No Steps" ).SetToolTip("Disable footstep marks");

    }
    Asset.BeginGroup("Motion");
    {
        Asset.AddCheckBox( "useUVScroll", false ).SetTitle( "UV Scroll" );
        Asset.AddCheckBox( "useUVRotate", false ).SetTitle( "UV Rotate" );

        Asset.AddVec2( "uScroll", "vScroll", 0.0, 0.0, -10.0, 10.0 ).SetTitle( "Amount" ).SetToolTip( "Texture scroll speed in u direction. 1.0 means the entire texture will scroll by in 1 sec." );

        Asset.AddCheckBox( "clampU", false ).SetTitle( "Clamp U" );
        Asset.AddCheckBox( "clampV", false ).SetTitle( "Clamp V" );

    }

    Asset.BeginGroup("Advanced");
    {
        string cullFaceModes = "back | front | none";
        string stencilFunc = "never | less | equal | less_equal | greater | not_equal | greater_equal | always";
        string stencilOp = "keep | zero | replace | incr_sat | decr_sat | invert | incr | decr";
        string polyOffset = "<none> | decal | impact";
        string blendFuncs = "zero | one | src_color | inv_src_color | src_alpha | inv_src_alpha | dest_alpha | inv_dest_alpha | dest_color | inv_dest_color | src_alpha_sat | blend_factor | inv_blend_factor | src1_color | inv_src1_color | src1_alpha | inv_src1_alpha";

        Asset.AddCombo( "srcBlendColor", blendFuncs).SetTitle( "Src Blend Color" ).SetDefaultValue("src_alpha");
        Asset.AddCombo( "dstBlendColor", blendFuncs).SetTitle( "Dst Blend Color" ).SetDefaultValue("src_alpha");
        Asset.AddCombo( "srcBlendAlpha", blendFuncs).SetTitle( "Src Blend Alpha" ).SetDefaultValue("inv_src_alpha");
        Asset.AddCombo( "dstBlendAlpha", blendFuncs).SetTitle( "Dst Blend Alpha" ).SetDefaultValue("inv_src_alpha");
        Asset.AddCombo( "polyOffset", polyOffset).SetTitle( "PolyOffset" );
        Asset.AddCombo( "cullFace", cullFaceModes).SetTitle( "CullFace" );
        Asset.AddCombo( "depthTest", stencilFunc ).SetTitle( "Depth Test" );
        Asset.AddCheckBox( "depthWrite", true ).SetTitle( "Depth Write" );
        Asset.AddCheckBox( "wireFrame", false ).SetTitle( "WireFrame" ); // for shits

    }
}




